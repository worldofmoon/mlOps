name: Train-Pipeline

on:
  push:
  pull_request:
    branches:
    - layers
    - branch_01
    - main
  workflow_dispatch:
  # Allows external webhook trigger
  repository_dispatch:
    types:
      - webhook
jobs:
  unitary_test_job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 0

      - name: Set up Python 3.10.14
        uses: actions/setup-python@v1
        with:
          python-version: 3.10.14

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Test files
        run: |
          pytest test_train.py -p no:warnings

  check_python_code_style_job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 0

      - name: Set up Python 3.10
        uses: actions/setup-python@v1
        with:
          python-version: 3.10.14

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Validate Python Code Style
        run: |
          pycodestyle . --ignore=E501

  train_job:
      runs-on: ubuntu-latest
      needs: [unitary_test_job, check_python_code_style_job]
      steps:
          - uses: actions/checkout@v1
            with:
              fetch-depth: 0

          - name: Set up Python 3.10.14
            uses: actions/setup-python@v1
            with:
                python-version: 3.10.14

          - name: Install dependencies
            run: |
                python -m pip install --upgrade pip
                if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

          - name: Train Model
            run: |
              python train.py 

  build_image:
    runs-on: ubuntu-latest
    needs: [train_job]
    steps:
      - uses: actions/checkout@v2
      - name: docker login
        run: |
          docker login -u ${{secrets.DOCKER_USER}} -p ${{secrets.DOCKER_PASSWORD}}
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{secrets.DOCKER_USER}}/${{secrets.DOCKER_IMAGE_NAME}}

      - name: Docker Push
        run: docker push ${{secrets.DOCKER_USER}}/${{secrets.DOCKER_IMAGE_NAME}}